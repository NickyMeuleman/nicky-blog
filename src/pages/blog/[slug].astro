---
import type { GetStaticPaths } from "astro";
import { type CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import { Aside } from "../../components/Aside";
import Tweet from "../../components/Tweet.astro";
import CodePen from "../../components/CodePen.astro";
import YouTube from "../../components/YouTube.astro";
import { Picture } from "astro:assets";

type Post = CollectionEntry<"blog">;
type Props = { post: Post };

export const getStaticPaths = (async () => {
  const posts: Post[] = await getCollection("blog");
  return posts
    .filter((p) => !p.data.draft)
    .map((p) => ({
      params: { slug: p.slug },
      props: { post: p },
    }));
}) satisfies GetStaticPaths;

const { post } = Astro.props;
if (!post) return Astro.rewrite("/404");
const { Content } = await post.render();
---

<Layout title={post.data.title}>
  <article class="m-5">
    <h1 class="my-2 text-4xl" transition:name={`${post.slug}-title`}>
      {post.data.title}
    </h1>
    {
      post.data.cover && (
        <Picture
          src={post.data.cover}
          alt={post.data.coverAlt ?? ""}
          width={post.data.cover.width / 2}
          densities={[1.5, 2]}
          formats={["avif", "webp"]}
          loading="eager"
          fetchpriority="high"
          transition:name={`${post.slug}-image`}
        />
      )
    }
    <Content components={{ Aside, Tweet, YouTube, CodePen }} />
  </article>
</Layout>
