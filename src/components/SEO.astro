---
import { generateSocialImage } from "$utils/og-image";

interface Props {
  image?: string;
  title?: string;
  description?: string;
  keywords?: string[];
  canonicalUrl?: string;
  twitterHandle?: string;
  date?: Date;
  author?: string;
}

const titleSuffix = "Nicky Meuleman";
const {
  image,
  title = titleSuffix,
  description = "Personal website. It's a blog, and more!",
  keywords,
  canonicalUrl,
  twitterHandle = "@NMeuleman",
  date,
  author = "Nicky Meuleman",
} = Astro.props;
let url = Astro.url.toString();

let metaImage = null;
if (date) {
  // eslint-disable-next-line @typescript-eslint/ban-ts-comment
  //@ts-ignore
  metaImage = generateSocialImage({
    title,
    date: date
      .toLocaleDateString("en-US", {
        year: "numeric",
        month: "long",
        day: "numeric",
      })
      .toUpperCase(),
    dateColor: "99A8CF",
    dateExtraConfig: "letter_spacing_2",
    author,
    twitter: twitterHandle,
    titleFontSize: 64,
    dateFontSize: 36,
    authorFontSize: 36,
    twitterFontSize: 36,
  });
} else if (image) {
  metaImage = `${url}${image}`;
}
if (url.endsWith("/")) {
  // if url ends in "/", remove it
  url = url.slice(0, -1);
}

const formattedTitle = title ? `${title} | ${titleSuffix}` : titleSuffix;

console.log({
  astro: Astro.url,
  meta: import.meta.url,
});
---

<Fragment>
  <title>{formattedTitle}</title>
  <meta name="description" content={description} />
  {metaImage && <meta name="image" content={metaImage} />}
  {metaImage && <meta property="og:image" content={metaImage} />}
  <meta property="og:title" content={title} />
  <meta property="og:url" content={url} />
  <meta property="og:description" content={description} />
  {metaImage && <meta property="og:image" content={metaImage} />}
  <meta property="og:type" content="website" />
  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:title" content={title} />
  <meta name="twitter:url" content={url} />
  <meta name="twitter:description" content={description} />
  {metaImage && <meta name="twitter:image" content={metaImage} />}
  <meta name="twitter:creator" content={twitterHandle} />
  {canonicalUrl && <link rel="canonical" href={canonicalUrl} />}
  {keywords && <meta name="keywords" content={keywords.join(", ")} />}
</Fragment>
